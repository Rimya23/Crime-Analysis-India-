<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.22.0108.1039                               -->
<workbook original-version='18.1' source-build='2021.4.3 (20214.22.0108.1039)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <VizInTooltipHideWorksheet />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (2018 Cyber Crime Stats)' inline='true' name='federated.1q5l0qt0dw3zzw1dvs4b41prvujn' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='2018 Cyber Crime Stats(Updated)' name='excel-direct.1cdng7a1jd2o3o1667szd1crfq06'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Data/2018 Cyber Crime Stats(Updated).xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1cdng7a1jd2o3o1667szd1crfq06' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:U33:no:A1:U33:0' header='yes' outcome='6'>
            <column datatype='string' name='City' ordinal='0' />
            <column datatype='integer' name='Personal Revenge' ordinal='1' />
            <column datatype='integer' name='Anger' ordinal='2' />
            <column datatype='integer' name='Fraud' ordinal='3' />
            <column datatype='integer' name='Extortion' ordinal='4' />
            <column datatype='integer' name='Causing Disrepute' ordinal='5' />
            <column datatype='integer' name='Prank' ordinal='6' />
            <column datatype='integer' name='Sexual Exploitation' ordinal='7' />
            <column datatype='integer' name='Political Motives' ordinal='8' />
            <column datatype='integer' name='Terrorist Activities' ordinal='9' />
            <column datatype='integer' name='Inciting Hate against Country' ordinal='10' />
            <column datatype='integer' name='Disrupt Public Service' ordinal='11' />
            <column datatype='integer' name='Sale purchase illegal drugs' ordinal='12' />
            <column datatype='integer' name='Developing own business' ordinal='13' />
            <column datatype='integer' name='Spreading Piracy' ordinal='14' />
            <column datatype='integer' name='Psycho or Pervert' ordinal='15' />
            <column datatype='integer' name='Steal Information' ordinal='16' />
            <column datatype='integer' name='Abetment to Suicide' ordinal='17' />
            <column datatype='integer' name='Others' ordinal='18' />
            <column datatype='integer' name='Total' ordinal='19' />
            <column datatype='real' name='Crime Rate' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1cdng7a1jd2o3o1667szd1crfq06' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:U33:no:A1:U33:0' header='yes' outcome='6'>
            <column datatype='string' name='City' ordinal='0' />
            <column datatype='integer' name='Personal Revenge' ordinal='1' />
            <column datatype='integer' name='Anger' ordinal='2' />
            <column datatype='integer' name='Fraud' ordinal='3' />
            <column datatype='integer' name='Extortion' ordinal='4' />
            <column datatype='integer' name='Causing Disrepute' ordinal='5' />
            <column datatype='integer' name='Prank' ordinal='6' />
            <column datatype='integer' name='Sexual Exploitation' ordinal='7' />
            <column datatype='integer' name='Political Motives' ordinal='8' />
            <column datatype='integer' name='Terrorist Activities' ordinal='9' />
            <column datatype='integer' name='Inciting Hate against Country' ordinal='10' />
            <column datatype='integer' name='Disrupt Public Service' ordinal='11' />
            <column datatype='integer' name='Sale purchase illegal drugs' ordinal='12' />
            <column datatype='integer' name='Developing own business' ordinal='13' />
            <column datatype='integer' name='Spreading Piracy' ordinal='14' />
            <column datatype='integer' name='Psycho or Pervert' ordinal='15' />
            <column datatype='integer' name='Steal Information' ordinal='16' />
            <column datatype='integer' name='Abetment to Suicide' ordinal='17' />
            <column datatype='integer' name='Others' ordinal='18' />
            <column datatype='integer' name='Total' ordinal='19' />
            <column datatype='real' name='Crime Rate' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U33:no:A1:U33:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B9D6A77F149F4E12A02005DDE7360D23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Personal Revenge</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Personal Revenge]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Personal Revenge</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B9D6A77F149F4E12A02005DDE7360D23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Anger</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Anger]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Anger</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B9D6A77F149F4E12A02005DDE7360D23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fraud</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Fraud]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Fraud</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B9D6A77F149F4E12A02005DDE7360D23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Extortion</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Extortion]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Extortion</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B9D6A77F149F4E12A02005DDE7360D23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Causing Disrepute</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Causing Disrepute]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Causing Disrepute</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B9D6A77F149F4E12A02005DDE7360D23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Prank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Prank]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Prank</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B9D6A77F149F4E12A02005DDE7360D23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sexual Exploitation</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sexual Exploitation]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Sexual Exploitation</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B9D6A77F149F4E12A02005DDE7360D23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Political Motives</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Political Motives]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Political Motives</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B9D6A77F149F4E12A02005DDE7360D23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Terrorist Activities</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Terrorist Activities]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Terrorist Activities</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B9D6A77F149F4E12A02005DDE7360D23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Inciting Hate against Country</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Inciting Hate against Country]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Inciting Hate against Country</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B9D6A77F149F4E12A02005DDE7360D23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Disrupt Public Service</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Disrupt Public Service]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Disrupt Public Service</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B9D6A77F149F4E12A02005DDE7360D23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sale purchase illegal drugs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sale purchase illegal drugs]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Sale purchase illegal drugs</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B9D6A77F149F4E12A02005DDE7360D23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Developing own business</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Developing own business]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Developing own business</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B9D6A77F149F4E12A02005DDE7360D23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Spreading Piracy</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Spreading Piracy]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Spreading Piracy</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B9D6A77F149F4E12A02005DDE7360D23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Psycho or Pervert</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Psycho or Pervert]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Psycho or Pervert</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B9D6A77F149F4E12A02005DDE7360D23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Steal Information</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Steal Information]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Steal Information</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B9D6A77F149F4E12A02005DDE7360D23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Abetment to Suicide</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Abetment to Suicide]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Abetment to Suicide</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B9D6A77F149F4E12A02005DDE7360D23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Others</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Others]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Others</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B9D6A77F149F4E12A02005DDE7360D23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Total</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B9D6A77F149F4E12A02005DDE7360D23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Crime Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Crime Rate]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Crime Rate</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B9D6A77F149F4E12A02005DDE7360D23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Top10' datatype='boolean' name='[Calculation_350154886162137088]' role='measure' type='nominal'>
        <calculation class='tableau' formula='INDEX()&lt;=10'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='City1' datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <semantic-values semantic-role='[City].[Name]'>
          <semantic-value key='&quot;Chandigarh City&quot;' value='&quot;Chandigarh&quot;' />
        </semantic-values>
        <semantic-values semantic-role='[Geographical].[Latitude]'>
          <semantic-value key='&quot;Aurangabad&quot;' value='19.876200000000001' />
          <semantic-value key='&quot;Durg-Bhilainagar&quot;' value='21.1938' />
          <semantic-value key='&quot;Jodhpur&quot;' value='26.238900000000001' />
          <semantic-value key='&quot;Kollam&quot;' value='8.8932000000000002' />
          <semantic-value key='&quot;Kota&quot;' value='25.213799999999999' />
          <semantic-value key='&quot;Raipur&quot;' value='21.2514' />
          <semantic-value key='&quot;Srinagar&quot;' value='34.079999999999998' />
          <semantic-value key='&quot;Thiruvananthapuram&quot;' value='8.5241000000000007' />
          <semantic-value key='&quot;Thrissur&quot;' value='10.5276' />
          <semantic-value key='&quot;Tiruchirapalli&quot;' value='10.7905' />
          <semantic-value key='&quot;Vasai Virar&quot;' value='19.3919' />
        </semantic-values>
        <semantic-values semantic-role='[Geographical].[Longitude]'>
          <semantic-value key='&quot;Aurangabad&quot;' value='75.343299999999999' />
          <semantic-value key='&quot;Durg-Bhilainagar&quot;' value='81.350899999999996' />
          <semantic-value key='&quot;Jodhpur&quot;' value='76.024299999999997' />
          <semantic-value key='&quot;Kollam&quot;' value='76.614099999999993' />
          <semantic-value key='&quot;Kota&quot;' value='75.864800000000002' />
          <semantic-value key='&quot;Raipur&quot;' value='81.629599999999996' />
          <semantic-value key='&quot;Srinagar&quot;' value='74.793000000000006' />
          <semantic-value key='&quot;Thiruvananthapuram&quot;' value='76.936599999999999' />
          <semantic-value key='&quot;Thrissur&quot;' value='76.214399999999998' />
          <semantic-value key='&quot;Tiruchirapalli&quot;' value='78.704700000000003' />
          <semantic-value key='&quot;Vasai Virar&quot;' value='72.839699999999993' />
        </semantic-values>
      </column>
      <column datatype='real' name='[Crime Rate]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Disrupt Public Service]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Extortion]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Fraud]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Inciting Hate against Country]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Others]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Personal Revenge]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Political Motives]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Sexual Exploitation]' role='measure' type='quantitative' />
      <column caption='City Group' datatype='string' name='[South Cities]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[City]' new-bin='true'>
          <bin default-name='false' value='&quot;Central Cities&quot;'>
            <value>&quot;Agra&quot;</value>
            <value>&quot;Allahabad&quot;</value>
            <value>&quot;Aurangabad&quot;</value>
            <value>&quot;Bhopal&quot;</value>
            <value>&quot;Durg-Bhilainagar&quot;</value>
            <value>&quot;Gwalior&quot;</value>
            <value>&quot;Jabalpur&quot;</value>
            <value>&quot;Varanasi&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Eastern Cities&quot;'>
            <value>&quot;Asansol&quot;</value>
            <value>&quot;Dhanbad&quot;</value>
            <value>&quot;Jamshedpur&quot;</value>
            <value>&quot;Raipur&quot;</value>
            <value>&quot;Ranchi&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;North Cities&quot;'>
            <value>&quot;Amritsar&quot;</value>
            <value>&quot;Chandigarh City&quot;</value>
            <value>&quot;Faridabad&quot;</value>
            <value>&quot;Ludhiana&quot;</value>
            <value>&quot;Meerut&quot;</value>
            <value>&quot;Srinagar&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;South Cities&quot;'>
            <value>&quot;Kannur&quot;</value>
            <value>&quot;Kollam&quot;</value>
            <value>&quot;Madurai&quot;</value>
            <value>&quot;Malappuram&quot;</value>
            <value>&quot;Thiruvananthapuram&quot;</value>
            <value>&quot;Thrissur&quot;</value>
            <value>&quot;Tiruchirapalli&quot;</value>
            <value>&quot;Vijayawada&quot;</value>
            <value>&quot;Vishakhapatnam&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Western Cities&quot;'>
            <value>&quot;Jodhpur&quot;</value>
            <value>&quot;Kota&quot;</value>
            <value>&quot;Nasik&quot;</value>
            <value>&quot;Rajkot&quot;</value>
            <value>&quot;Vadodara&quot;</value>
            <value>&quot;Vasai Virar&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='integer' name='[Spreading Piracy]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Total]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_B9D6A77F149F4E12A02005DDE7360D23]' role='measure' type='quantitative' />
      <column-instance column='[Crime Rate]' derivation='Count' name='[cnt:Crime Rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Crime Rate]' derivation='Sum' name='[sum:Crime Rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Disrupt Public Service]' derivation='Sum' name='[sum:Disrupt Public Service:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Extortion]' derivation='Sum' name='[sum:Extortion:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Fraud]' derivation='Sum' name='[sum:Fraud:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Inciting Hate against Country]' derivation='Sum' name='[sum:Inciting Hate against Country:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Others]' derivation='Sum' name='[sum:Others:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Personal Revenge]' derivation='Sum' name='[sum:Personal Revenge:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Political Motives]' derivation='Sum' name='[sum:Political Motives:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sexual Exploitation]' derivation='Sum' name='[sum:Sexual Exploitation:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Spreading Piracy]' derivation='Sum' name='[sum:Spreading Piracy:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total]' derivation='Sum' name='[sum:Total:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_350154886162137088]' derivation='User' name='[usr:Calculation_350154886162137088:nk:2]' pivot='key' type='nominal'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_350154886162137088]' derivation='User' name='[usr:Calculation_350154886162137088:nk]' pivot='key' type='nominal'>
        <table-calc ordering-type='Columns' />
      </column-instance>
      <group caption='Action (City Group)' hidden='true' name='[Action (City Group)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[South Cities]' />
        </groupfilter>
      </group>
      <group caption='Action (City1)' hidden='true' name='[Action (City1)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[City]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (City Group)' hidden='true' name='[Tooltip (City Group)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[South Cities]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (City)' hidden='true' name='[Tooltip (City)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[City]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (City1)' hidden='true' name='[Tooltip (City1)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[City]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[usr:Calculation_350154886162137088:nk:2]' type='palette'>
            <map to='#91dcea'>
              <bucket>false</bucket>
            </map>
            <map to='#f77b66'>
              <bucket>true</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[South Cities]' palette='orange_gold_10_0' type='palette'>
            <map to='#519c51'>
              <bucket>&quot;South Cities&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;North Cities&quot;</bucket>
            </map>
            <map to='#9ca3a4'>
              <bucket>&quot;Central Cities&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Eastern Cities&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;Western Cities&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_350154886162137088:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>false</bucket>
            </map>
            <map to='#68ceee'>
              <bucket>true</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Total:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[cnt:Crime Rate:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[pcto:cnt:Crime Rate:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Crime Rate:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[usr:Calculation1:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Personal Revenge:qk]&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Fraud:qk]&quot;</bucket>
            </map>
            <map to='#a27099'>
              <bucket>&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Disrupt Public Service:qk]&quot;</bucket>
            </map>
            <map to='#b3b7b8'>
              <bucket>&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Political Motives:qk]&quot;</bucket>
            </map>
            <map to='#ba7e45'>
              <bucket>&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Spreading Piracy:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Inciting Hate against Country:qk]&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Others:qk]&quot;</bucket>
            </map>
            <map to='#f5715d'>
              <bucket>&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Sexual Exploitation:qk]&quot;</bucket>
            </map>
            <map to='#f5c75f'>
              <bucket>&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Extortion:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_B9D6A77F149F4E12A02005DDE7360D23'>
            <properties context=''>
              <relation connection='excel-direct.1cdng7a1jd2o3o1667szd1crfq06' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:U33:no:A1:U33:0' header='yes' outcome='6'>
                  <column datatype='string' name='City' ordinal='0' />
                  <column datatype='integer' name='Personal Revenge' ordinal='1' />
                  <column datatype='integer' name='Anger' ordinal='2' />
                  <column datatype='integer' name='Fraud' ordinal='3' />
                  <column datatype='integer' name='Extortion' ordinal='4' />
                  <column datatype='integer' name='Causing Disrepute' ordinal='5' />
                  <column datatype='integer' name='Prank' ordinal='6' />
                  <column datatype='integer' name='Sexual Exploitation' ordinal='7' />
                  <column datatype='integer' name='Political Motives' ordinal='8' />
                  <column datatype='integer' name='Terrorist Activities' ordinal='9' />
                  <column datatype='integer' name='Inciting Hate against Country' ordinal='10' />
                  <column datatype='integer' name='Disrupt Public Service' ordinal='11' />
                  <column datatype='integer' name='Sale purchase illegal drugs' ordinal='12' />
                  <column datatype='integer' name='Developing own business' ordinal='13' />
                  <column datatype='integer' name='Spreading Piracy' ordinal='14' />
                  <column datatype='integer' name='Psycho or Pervert' ordinal='15' />
                  <column datatype='integer' name='Steal Information' ordinal='16' />
                  <column datatype='integer' name='Abetment to Suicide' ordinal='17' />
                  <column datatype='integer' name='Others' ordinal='18' />
                  <column datatype='integer' name='Total' ordinal='19' />
                  <column datatype='real' name='Crime Rate' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 4 (generated)' name='[Action4_8459A97A4F7C451F86B3CE574854463A]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='Crime Rate by City (Region Map)' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5_11133928FA1F491F8B7FF9821D0F946B]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='Crime Rate by City' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action6_AAB79BB8D2174796A55D1FBADFAFFAEC]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='Crime Rate Count' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
    <action caption='Filter 7 (generated)' name='[Action7_9DC58CEE1AE9402FAB057B3A5AAD37D5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='City Wise Crime Cases Breakup (2)' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='City Wise Crime Cases Breakup'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Tableau Medium' fontsize='18'>City Wise Crime Cases Breakup(Crosstab)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (2018 Cyber Crime Stats)' name='federated.1q5l0qt0dw3zzw1dvs4b41prvujn' />
          </datasources>
          <datasource-dependencies datasource='federated.1q5l0qt0dw3zzw1dvs4b41prvujn'>
            <column caption='City1' datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Chandigarh City&quot;' value='&quot;Chandigarh&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Aurangabad&quot;' value='19.876200000000001' />
                <semantic-value key='&quot;Durg-Bhilainagar&quot;' value='21.1938' />
                <semantic-value key='&quot;Jodhpur&quot;' value='26.238900000000001' />
                <semantic-value key='&quot;Kollam&quot;' value='8.8932000000000002' />
                <semantic-value key='&quot;Kota&quot;' value='25.213799999999999' />
                <semantic-value key='&quot;Raipur&quot;' value='21.2514' />
                <semantic-value key='&quot;Srinagar&quot;' value='34.079999999999998' />
                <semantic-value key='&quot;Thiruvananthapuram&quot;' value='8.5241000000000007' />
                <semantic-value key='&quot;Thrissur&quot;' value='10.5276' />
                <semantic-value key='&quot;Tiruchirapalli&quot;' value='10.7905' />
                <semantic-value key='&quot;Vasai Virar&quot;' value='19.3919' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Aurangabad&quot;' value='75.343299999999999' />
                <semantic-value key='&quot;Durg-Bhilainagar&quot;' value='81.350899999999996' />
                <semantic-value key='&quot;Jodhpur&quot;' value='76.024299999999997' />
                <semantic-value key='&quot;Kollam&quot;' value='76.614099999999993' />
                <semantic-value key='&quot;Kota&quot;' value='75.864800000000002' />
                <semantic-value key='&quot;Raipur&quot;' value='81.629599999999996' />
                <semantic-value key='&quot;Srinagar&quot;' value='74.793000000000006' />
                <semantic-value key='&quot;Thiruvananthapuram&quot;' value='76.936599999999999' />
                <semantic-value key='&quot;Thrissur&quot;' value='76.214399999999998' />
                <semantic-value key='&quot;Tiruchirapalli&quot;' value='78.704700000000003' />
                <semantic-value key='&quot;Vasai Virar&quot;' value='72.839699999999993' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Disrupt Public Service]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Extortion]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Fraud]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Inciting Hate against Country]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Others]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Personal Revenge]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Political Motives]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Sexual Exploitation]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Spreading Piracy]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Terrorist Activities]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total]' role='measure' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Disrupt Public Service]' derivation='Sum' name='[sum:Disrupt Public Service:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Extortion]' derivation='Sum' name='[sum:Extortion:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fraud]' derivation='Sum' name='[sum:Fraud:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Inciting Hate against Country]' derivation='Sum' name='[sum:Inciting Hate against Country:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Others]' derivation='Sum' name='[sum:Others:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Personal Revenge]' derivation='Sum' name='[sum:Personal Revenge:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Political Motives]' derivation='Sum' name='[sum:Political Motives:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sexual Exploitation]' derivation='Sum' name='[sum:Sexual Exploitation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Spreading Piracy]' derivation='Sum' name='[sum:Spreading Piracy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Terrorist Activities]' derivation='Sum' name='[sum:Terrorist Activities:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total]' derivation='Sum' name='[sum:Total:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Fraud:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Sexual Exploitation:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Personal Revenge:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Inciting Hate against Country:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Extortion:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Spreading Piracy:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Disrupt Public Service:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Political Motives:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Terrorist Activities:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Others:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Total:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Fraud:qk]&quot;</bucket>
              <bucket>&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Sexual Exploitation:qk]&quot;</bucket>
              <bucket>&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Personal Revenge:qk]&quot;</bucket>
              <bucket>&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Inciting Hate against Country:qk]&quot;</bucket>
              <bucket>&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Extortion:qk]&quot;</bucket>
              <bucket>&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Spreading Piracy:qk]&quot;</bucket>
              <bucket>&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Disrupt Public Service:qk]&quot;</bucket>
              <bucket>&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Political Motives:qk]&quot;</bucket>
              <bucket>&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Terrorist Activities:qk]&quot;</bucket>
              <bucket>&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Others:qk]&quot;</bucket>
              <bucket>&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Total:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[Tooltip (City1)]'>
            <groupfilter function='level-members' level='[City]' user:ui-action-filter='[Action - Sheet 8]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[none:City:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Total:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[:Measure Names]</column>
            <column>[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[Tooltip (City1)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[none:City:nk]</rows>
        <cols>[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{1D050513-D50B-4A41-82BC-8F9C02146BBF}' />
    </worksheet>
    <worksheet name='City Wise Crime Cases Breakup (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Tableau Medium' fontsize='18'>City Wise Crime Cases Breakup</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (2018 Cyber Crime Stats)' name='federated.1q5l0qt0dw3zzw1dvs4b41prvujn' />
          </datasources>
          <datasource-dependencies datasource='federated.1q5l0qt0dw3zzw1dvs4b41prvujn'>
            <column caption='City1' datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Chandigarh City&quot;' value='&quot;Chandigarh&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Aurangabad&quot;' value='19.876200000000001' />
                <semantic-value key='&quot;Durg-Bhilainagar&quot;' value='21.1938' />
                <semantic-value key='&quot;Jodhpur&quot;' value='26.238900000000001' />
                <semantic-value key='&quot;Kollam&quot;' value='8.8932000000000002' />
                <semantic-value key='&quot;Kota&quot;' value='25.213799999999999' />
                <semantic-value key='&quot;Raipur&quot;' value='21.2514' />
                <semantic-value key='&quot;Srinagar&quot;' value='34.079999999999998' />
                <semantic-value key='&quot;Thiruvananthapuram&quot;' value='8.5241000000000007' />
                <semantic-value key='&quot;Thrissur&quot;' value='10.5276' />
                <semantic-value key='&quot;Tiruchirapalli&quot;' value='10.7905' />
                <semantic-value key='&quot;Vasai Virar&quot;' value='19.3919' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Aurangabad&quot;' value='75.343299999999999' />
                <semantic-value key='&quot;Durg-Bhilainagar&quot;' value='81.350899999999996' />
                <semantic-value key='&quot;Jodhpur&quot;' value='76.024299999999997' />
                <semantic-value key='&quot;Kollam&quot;' value='76.614099999999993' />
                <semantic-value key='&quot;Kota&quot;' value='75.864800000000002' />
                <semantic-value key='&quot;Raipur&quot;' value='81.629599999999996' />
                <semantic-value key='&quot;Srinagar&quot;' value='74.793000000000006' />
                <semantic-value key='&quot;Thiruvananthapuram&quot;' value='76.936599999999999' />
                <semantic-value key='&quot;Thrissur&quot;' value='76.214399999999998' />
                <semantic-value key='&quot;Tiruchirapalli&quot;' value='78.704700000000003' />
                <semantic-value key='&quot;Vasai Virar&quot;' value='72.839699999999993' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Disrupt Public Service]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Extortion]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Fraud]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Inciting Hate against Country]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Others]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Personal Revenge]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Political Motives]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Sexual Exploitation]' role='measure' type='quantitative' />
            <column caption='City Group' datatype='string' name='[South Cities]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[City]' new-bin='true'>
                <bin default-name='false' value='&quot;Central Cities&quot;'>
                  <value>&quot;Agra&quot;</value>
                  <value>&quot;Allahabad&quot;</value>
                  <value>&quot;Aurangabad&quot;</value>
                  <value>&quot;Bhopal&quot;</value>
                  <value>&quot;Durg-Bhilainagar&quot;</value>
                  <value>&quot;Gwalior&quot;</value>
                  <value>&quot;Jabalpur&quot;</value>
                  <value>&quot;Varanasi&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Eastern Cities&quot;'>
                  <value>&quot;Asansol&quot;</value>
                  <value>&quot;Dhanbad&quot;</value>
                  <value>&quot;Jamshedpur&quot;</value>
                  <value>&quot;Raipur&quot;</value>
                  <value>&quot;Ranchi&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North Cities&quot;'>
                  <value>&quot;Amritsar&quot;</value>
                  <value>&quot;Chandigarh City&quot;</value>
                  <value>&quot;Faridabad&quot;</value>
                  <value>&quot;Ludhiana&quot;</value>
                  <value>&quot;Meerut&quot;</value>
                  <value>&quot;Srinagar&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South Cities&quot;'>
                  <value>&quot;Kannur&quot;</value>
                  <value>&quot;Kollam&quot;</value>
                  <value>&quot;Madurai&quot;</value>
                  <value>&quot;Malappuram&quot;</value>
                  <value>&quot;Thiruvananthapuram&quot;</value>
                  <value>&quot;Thrissur&quot;</value>
                  <value>&quot;Tiruchirapalli&quot;</value>
                  <value>&quot;Vijayawada&quot;</value>
                  <value>&quot;Vishakhapatnam&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Western Cities&quot;'>
                  <value>&quot;Jodhpur&quot;</value>
                  <value>&quot;Kota&quot;</value>
                  <value>&quot;Nasik&quot;</value>
                  <value>&quot;Rajkot&quot;</value>
                  <value>&quot;Vadodara&quot;</value>
                  <value>&quot;Vasai Virar&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Spreading Piracy]' role='measure' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Disrupt Public Service]' derivation='Sum' name='[sum:Disrupt Public Service:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Extortion]' derivation='Sum' name='[sum:Extortion:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fraud]' derivation='Sum' name='[sum:Fraud:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Inciting Hate against Country]' derivation='Sum' name='[sum:Inciting Hate against Country:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Others]' derivation='Sum' name='[sum:Others:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Personal Revenge]' derivation='Sum' name='[sum:Personal Revenge:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Political Motives]' derivation='Sum' name='[sum:Political Motives:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sexual Exploitation]' derivation='Sum' name='[sum:Sexual Exploitation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Spreading Piracy]' derivation='Sum' name='[sum:Spreading Piracy:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Disrupt Public Service:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Extortion:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Fraud:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Inciting Hate against Country:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Others:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Personal Revenge:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Political Motives:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Sexual Exploitation:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Spreading Piracy:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Fraud:qk]&quot;</bucket>
              <bucket>&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Others:qk]&quot;</bucket>
              <bucket>&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Sexual Exploitation:qk]&quot;</bucket>
              <bucket>&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Personal Revenge:qk]&quot;</bucket>
              <bucket>&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Extortion:qk]&quot;</bucket>
              <bucket>&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Inciting Hate against Country:qk]&quot;</bucket>
              <bucket>&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Political Motives:qk]&quot;</bucket>
              <bucket>&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Spreading Piracy:qk]&quot;</bucket>
              <bucket>&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Disrupt Public Service:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[Action (City Group)]'>
            <groupfilter function='member' level='[South Cities]' member='&quot;South Cities&quot;' user:ui-action-filter='[Action6_AAB79BB8D2174796A55D1FBADFAFFAEC]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[Action (City1)]'>
            <groupfilter function='level-members' level='[City]' user:ui-action-filter='[Action1_B18D9FD6DE5D49E699773E5419453906]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[South Cities]' filter-group='4'>
            <groupfilter function='level-members' level='[South Cities]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[none:City:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:City:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[none:City:nk]</column>
            <column>[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[South Cities]</column>
            <column>[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[Action (City1)]</column>
            <column>[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[:Measure Names]</column>
            <column>[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[Action (City Group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[Multiple Values]' scope='rows' value='Case Count' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[Multiple Values]</rows>
        <cols>[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{F938CBB0-511A-40E3-A605-73DF77F74D38}' />
    </worksheet>
    <worksheet name='City Wise Crime Cases Breakup (3)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Tableau Medium' fontsize='18'>City Groups Crime Cases Breakup</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (2018 Cyber Crime Stats)' name='federated.1q5l0qt0dw3zzw1dvs4b41prvujn' />
          </datasources>
          <datasource-dependencies datasource='federated.1q5l0qt0dw3zzw1dvs4b41prvujn'>
            <column caption='Top10' datatype='boolean' name='[Calculation_350154886162137088]' role='measure' type='nominal'>
              <calculation class='tableau' formula='INDEX()&lt;=10'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='City1' datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Chandigarh City&quot;' value='&quot;Chandigarh&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Aurangabad&quot;' value='19.876200000000001' />
                <semantic-value key='&quot;Durg-Bhilainagar&quot;' value='21.1938' />
                <semantic-value key='&quot;Jodhpur&quot;' value='26.238900000000001' />
                <semantic-value key='&quot;Kollam&quot;' value='8.8932000000000002' />
                <semantic-value key='&quot;Kota&quot;' value='25.213799999999999' />
                <semantic-value key='&quot;Raipur&quot;' value='21.2514' />
                <semantic-value key='&quot;Srinagar&quot;' value='34.079999999999998' />
                <semantic-value key='&quot;Thiruvananthapuram&quot;' value='8.5241000000000007' />
                <semantic-value key='&quot;Thrissur&quot;' value='10.5276' />
                <semantic-value key='&quot;Tiruchirapalli&quot;' value='10.7905' />
                <semantic-value key='&quot;Vasai Virar&quot;' value='19.3919' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Aurangabad&quot;' value='75.343299999999999' />
                <semantic-value key='&quot;Durg-Bhilainagar&quot;' value='81.350899999999996' />
                <semantic-value key='&quot;Jodhpur&quot;' value='76.024299999999997' />
                <semantic-value key='&quot;Kollam&quot;' value='76.614099999999993' />
                <semantic-value key='&quot;Kota&quot;' value='75.864800000000002' />
                <semantic-value key='&quot;Raipur&quot;' value='81.629599999999996' />
                <semantic-value key='&quot;Srinagar&quot;' value='74.793000000000006' />
                <semantic-value key='&quot;Thiruvananthapuram&quot;' value='76.936599999999999' />
                <semantic-value key='&quot;Thrissur&quot;' value='76.214399999999998' />
                <semantic-value key='&quot;Tiruchirapalli&quot;' value='78.704700000000003' />
                <semantic-value key='&quot;Vasai Virar&quot;' value='72.839699999999993' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Disrupt Public Service]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Extortion]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Fraud]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Inciting Hate against Country]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Others]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Personal Revenge]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Political Motives]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Sexual Exploitation]' role='measure' type='quantitative' />
            <column caption='City Group' datatype='string' name='[South Cities]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[City]' new-bin='true'>
                <bin default-name='false' value='&quot;Central Cities&quot;'>
                  <value>&quot;Agra&quot;</value>
                  <value>&quot;Allahabad&quot;</value>
                  <value>&quot;Aurangabad&quot;</value>
                  <value>&quot;Bhopal&quot;</value>
                  <value>&quot;Durg-Bhilainagar&quot;</value>
                  <value>&quot;Gwalior&quot;</value>
                  <value>&quot;Jabalpur&quot;</value>
                  <value>&quot;Varanasi&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Eastern Cities&quot;'>
                  <value>&quot;Asansol&quot;</value>
                  <value>&quot;Dhanbad&quot;</value>
                  <value>&quot;Jamshedpur&quot;</value>
                  <value>&quot;Raipur&quot;</value>
                  <value>&quot;Ranchi&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North Cities&quot;'>
                  <value>&quot;Amritsar&quot;</value>
                  <value>&quot;Chandigarh City&quot;</value>
                  <value>&quot;Faridabad&quot;</value>
                  <value>&quot;Ludhiana&quot;</value>
                  <value>&quot;Meerut&quot;</value>
                  <value>&quot;Srinagar&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South Cities&quot;'>
                  <value>&quot;Kannur&quot;</value>
                  <value>&quot;Kollam&quot;</value>
                  <value>&quot;Madurai&quot;</value>
                  <value>&quot;Malappuram&quot;</value>
                  <value>&quot;Thiruvananthapuram&quot;</value>
                  <value>&quot;Thrissur&quot;</value>
                  <value>&quot;Tiruchirapalli&quot;</value>
                  <value>&quot;Vijayawada&quot;</value>
                  <value>&quot;Vishakhapatnam&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Western Cities&quot;'>
                  <value>&quot;Jodhpur&quot;</value>
                  <value>&quot;Kota&quot;</value>
                  <value>&quot;Nasik&quot;</value>
                  <value>&quot;Rajkot&quot;</value>
                  <value>&quot;Vadodara&quot;</value>
                  <value>&quot;Vasai Virar&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Spreading Piracy]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total]' role='measure' type='quantitative' />
            <column-instance column='[Disrupt Public Service]' derivation='Sum' name='[sum:Disrupt Public Service:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Extortion]' derivation='Sum' name='[sum:Extortion:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fraud]' derivation='Sum' name='[sum:Fraud:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Inciting Hate against Country]' derivation='Sum' name='[sum:Inciting Hate against Country:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Others]' derivation='Sum' name='[sum:Others:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Personal Revenge]' derivation='Sum' name='[sum:Personal Revenge:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Political Motives]' derivation='Sum' name='[sum:Political Motives:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sexual Exploitation]' derivation='Sum' name='[sum:Sexual Exploitation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Spreading Piracy]' derivation='Sum' name='[sum:Spreading Piracy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total]' derivation='Sum' name='[sum:Total:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_350154886162137088]' derivation='User' name='[usr:Calculation_350154886162137088:nk:2]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Total:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Fraud:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Sexual Exploitation:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Personal Revenge:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Extortion:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Spreading Piracy:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Political Motives:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Disrupt Public Service:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Inciting Hate against Country:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Others:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Total:qk]&quot;</bucket>
              <bucket>&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Fraud:qk]&quot;</bucket>
              <bucket>&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Sexual Exploitation:qk]&quot;</bucket>
              <bucket>&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Personal Revenge:qk]&quot;</bucket>
              <bucket>&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Extortion:qk]&quot;</bucket>
              <bucket>&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Spreading Piracy:qk]&quot;</bucket>
              <bucket>&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Political Motives:qk]&quot;</bucket>
              <bucket>&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Disrupt Public Service:qk]&quot;</bucket>
              <bucket>&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Inciting Hate against Country:qk]&quot;</bucket>
              <bucket>&quot;[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Others:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[South Cities]'>
            <groupfilter function='level-members' level='[South Cities]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[usr:Calculation_350154886162137088:nk:2]'>
            <groupfilter function='member' level='[usr:Calculation_350154886162137088:nk:2]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[:Measure Names]</column>
            <column>[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[South Cities]</column>
            <column>[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[usr:Calculation_350154886162137088:nk:2]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[Multiple Values]' scope='rows' value='Case Count' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[Multiple Values]</rows>
        <cols>([federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[South Cities] / [federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{37AEE8D1-E725-4D47-923E-DC8C4D8D124B}' />
    </worksheet>
    <worksheet name='Crime Rate Count'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Tableau Medium' fontsize='18'>Crime Rate Count</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (2018 Cyber Crime Stats)' name='federated.1q5l0qt0dw3zzw1dvs4b41prvujn' />
          </datasources>
          <datasource-dependencies datasource='Parameters' />
          <datasource-dependencies datasource='federated.1q5l0qt0dw3zzw1dvs4b41prvujn'>
            <column caption='City1' datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Chandigarh City&quot;' value='&quot;Chandigarh&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Aurangabad&quot;' value='19.876200000000001' />
                <semantic-value key='&quot;Durg-Bhilainagar&quot;' value='21.1938' />
                <semantic-value key='&quot;Jodhpur&quot;' value='26.238900000000001' />
                <semantic-value key='&quot;Kollam&quot;' value='8.8932000000000002' />
                <semantic-value key='&quot;Kota&quot;' value='25.213799999999999' />
                <semantic-value key='&quot;Raipur&quot;' value='21.2514' />
                <semantic-value key='&quot;Srinagar&quot;' value='34.079999999999998' />
                <semantic-value key='&quot;Thiruvananthapuram&quot;' value='8.5241000000000007' />
                <semantic-value key='&quot;Thrissur&quot;' value='10.5276' />
                <semantic-value key='&quot;Tiruchirapalli&quot;' value='10.7905' />
                <semantic-value key='&quot;Vasai Virar&quot;' value='19.3919' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Aurangabad&quot;' value='75.343299999999999' />
                <semantic-value key='&quot;Durg-Bhilainagar&quot;' value='81.350899999999996' />
                <semantic-value key='&quot;Jodhpur&quot;' value='76.024299999999997' />
                <semantic-value key='&quot;Kollam&quot;' value='76.614099999999993' />
                <semantic-value key='&quot;Kota&quot;' value='75.864800000000002' />
                <semantic-value key='&quot;Raipur&quot;' value='81.629599999999996' />
                <semantic-value key='&quot;Srinagar&quot;' value='74.793000000000006' />
                <semantic-value key='&quot;Thiruvananthapuram&quot;' value='76.936599999999999' />
                <semantic-value key='&quot;Thrissur&quot;' value='76.214399999999998' />
                <semantic-value key='&quot;Tiruchirapalli&quot;' value='78.704700000000003' />
                <semantic-value key='&quot;Vasai Virar&quot;' value='72.839699999999993' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Crime Rate]' role='measure' type='quantitative' />
            <column caption='City Group' datatype='string' name='[South Cities]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[City]' new-bin='true'>
                <bin default-name='false' value='&quot;Central Cities&quot;'>
                  <value>&quot;Agra&quot;</value>
                  <value>&quot;Allahabad&quot;</value>
                  <value>&quot;Aurangabad&quot;</value>
                  <value>&quot;Bhopal&quot;</value>
                  <value>&quot;Durg-Bhilainagar&quot;</value>
                  <value>&quot;Gwalior&quot;</value>
                  <value>&quot;Jabalpur&quot;</value>
                  <value>&quot;Varanasi&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Eastern Cities&quot;'>
                  <value>&quot;Asansol&quot;</value>
                  <value>&quot;Dhanbad&quot;</value>
                  <value>&quot;Jamshedpur&quot;</value>
                  <value>&quot;Raipur&quot;</value>
                  <value>&quot;Ranchi&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North Cities&quot;'>
                  <value>&quot;Amritsar&quot;</value>
                  <value>&quot;Chandigarh City&quot;</value>
                  <value>&quot;Faridabad&quot;</value>
                  <value>&quot;Ludhiana&quot;</value>
                  <value>&quot;Meerut&quot;</value>
                  <value>&quot;Srinagar&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South Cities&quot;'>
                  <value>&quot;Kannur&quot;</value>
                  <value>&quot;Kollam&quot;</value>
                  <value>&quot;Madurai&quot;</value>
                  <value>&quot;Malappuram&quot;</value>
                  <value>&quot;Thiruvananthapuram&quot;</value>
                  <value>&quot;Thrissur&quot;</value>
                  <value>&quot;Tiruchirapalli&quot;</value>
                  <value>&quot;Vijayawada&quot;</value>
                  <value>&quot;Vishakhapatnam&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Western Cities&quot;'>
                  <value>&quot;Jodhpur&quot;</value>
                  <value>&quot;Kota&quot;</value>
                  <value>&quot;Nasik&quot;</value>
                  <value>&quot;Rajkot&quot;</value>
                  <value>&quot;Vadodara&quot;</value>
                  <value>&quot;Vasai Virar&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Total]' role='measure' type='quantitative' />
            <column-instance column='[Crime Rate]' derivation='Sum' name='[sum:Crime Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total]' derivation='Sum' name='[sum:Total:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[Action (City1)]'>
            <groupfilter function='level-members' level='[City]' user:ui-action-filter='[Action1_B18D9FD6DE5D49E699773E5419453906]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[South Cities]' filter-group='4'>
            <groupfilter function='level-members' level='[South Cities]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[South Cities]</column>
            <column>[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[Action (City1)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='656' />
            <format attr='cell-h' value='656' />
            <format attr='cell' value='82' />
            <format attr='cell-q' value='410' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[Parameters].[Parameter 1]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Crime Rate:qk]' num-steps='20' palette='green_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Crime Rate:qk]' />
              <size column='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Crime Rate:qk]' />
              <text column='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[South Cities]' />
              <text column='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Total:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'><![CDATA[<Sheet name="Crime Rate Count (2)" maxwidth="300" maxheight="300" filter="<All Fields>">]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>City Group:&#9;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Crime Rate:&#9;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{1C5B698E-FB22-455F-B243-5EAB1E16DC8B}' />
    </worksheet>
    <worksheet name='Crime Rate Count (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Medium' fontsize='18'>Crime Rate Count</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (2018 Cyber Crime Stats)' name='federated.1q5l0qt0dw3zzw1dvs4b41prvujn' />
          </datasources>
          <datasource-dependencies datasource='Parameters' />
          <datasource-dependencies datasource='federated.1q5l0qt0dw3zzw1dvs4b41prvujn'>
            <column caption='City1' datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Chandigarh City&quot;' value='&quot;Chandigarh&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Aurangabad&quot;' value='19.876200000000001' />
                <semantic-value key='&quot;Durg-Bhilainagar&quot;' value='21.1938' />
                <semantic-value key='&quot;Jodhpur&quot;' value='26.238900000000001' />
                <semantic-value key='&quot;Kollam&quot;' value='8.8932000000000002' />
                <semantic-value key='&quot;Kota&quot;' value='25.213799999999999' />
                <semantic-value key='&quot;Raipur&quot;' value='21.2514' />
                <semantic-value key='&quot;Srinagar&quot;' value='34.079999999999998' />
                <semantic-value key='&quot;Thiruvananthapuram&quot;' value='8.5241000000000007' />
                <semantic-value key='&quot;Thrissur&quot;' value='10.5276' />
                <semantic-value key='&quot;Tiruchirapalli&quot;' value='10.7905' />
                <semantic-value key='&quot;Vasai Virar&quot;' value='19.3919' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Aurangabad&quot;' value='75.343299999999999' />
                <semantic-value key='&quot;Durg-Bhilainagar&quot;' value='81.350899999999996' />
                <semantic-value key='&quot;Jodhpur&quot;' value='76.024299999999997' />
                <semantic-value key='&quot;Kollam&quot;' value='76.614099999999993' />
                <semantic-value key='&quot;Kota&quot;' value='75.864800000000002' />
                <semantic-value key='&quot;Raipur&quot;' value='81.629599999999996' />
                <semantic-value key='&quot;Srinagar&quot;' value='74.793000000000006' />
                <semantic-value key='&quot;Thiruvananthapuram&quot;' value='76.936599999999999' />
                <semantic-value key='&quot;Thrissur&quot;' value='76.214399999999998' />
                <semantic-value key='&quot;Tiruchirapalli&quot;' value='78.704700000000003' />
                <semantic-value key='&quot;Vasai Virar&quot;' value='72.839699999999993' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Crime Rate]' role='measure' type='quantitative' />
            <column caption='City Group' datatype='string' name='[South Cities]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[City]' new-bin='true'>
                <bin default-name='false' value='&quot;Central Cities&quot;'>
                  <value>&quot;Agra&quot;</value>
                  <value>&quot;Allahabad&quot;</value>
                  <value>&quot;Aurangabad&quot;</value>
                  <value>&quot;Bhopal&quot;</value>
                  <value>&quot;Durg-Bhilainagar&quot;</value>
                  <value>&quot;Gwalior&quot;</value>
                  <value>&quot;Jabalpur&quot;</value>
                  <value>&quot;Varanasi&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Eastern Cities&quot;'>
                  <value>&quot;Asansol&quot;</value>
                  <value>&quot;Dhanbad&quot;</value>
                  <value>&quot;Jamshedpur&quot;</value>
                  <value>&quot;Raipur&quot;</value>
                  <value>&quot;Ranchi&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North Cities&quot;'>
                  <value>&quot;Amritsar&quot;</value>
                  <value>&quot;Chandigarh City&quot;</value>
                  <value>&quot;Faridabad&quot;</value>
                  <value>&quot;Ludhiana&quot;</value>
                  <value>&quot;Meerut&quot;</value>
                  <value>&quot;Srinagar&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South Cities&quot;'>
                  <value>&quot;Kannur&quot;</value>
                  <value>&quot;Kollam&quot;</value>
                  <value>&quot;Madurai&quot;</value>
                  <value>&quot;Malappuram&quot;</value>
                  <value>&quot;Thiruvananthapuram&quot;</value>
                  <value>&quot;Thrissur&quot;</value>
                  <value>&quot;Tiruchirapalli&quot;</value>
                  <value>&quot;Vijayawada&quot;</value>
                  <value>&quot;Vishakhapatnam&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Western Cities&quot;'>
                  <value>&quot;Jodhpur&quot;</value>
                  <value>&quot;Kota&quot;</value>
                  <value>&quot;Nasik&quot;</value>
                  <value>&quot;Rajkot&quot;</value>
                  <value>&quot;Vadodara&quot;</value>
                  <value>&quot;Vasai Virar&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[Crime Rate]' derivation='Sum' name='[sum:Crime Rate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[Tooltip (City Group)]'>
            <groupfilter function='level-members' level='[South Cities]' user:ui-action-filter='[Action - Crime Rate Count (2)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[Tooltip (City Group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[Parameters].[Parameter 1]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Crime Rate:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[South Cities]</rows>
        <cols />
      </table>
      <simple-id uuid='{391775F0-71CA-49B7-989B-553B5DB29408}' />
    </worksheet>
    <worksheet name='Crime Rate by City'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Tableau Medium' fontsize='18'>Total Cases by City</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (2018 Cyber Crime Stats)' name='federated.1q5l0qt0dw3zzw1dvs4b41prvujn' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1q5l0qt0dw3zzw1dvs4b41prvujn'>
            <column caption='City1' datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Chandigarh City&quot;' value='&quot;Chandigarh&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Aurangabad&quot;' value='19.876200000000001' />
                <semantic-value key='&quot;Durg-Bhilainagar&quot;' value='21.1938' />
                <semantic-value key='&quot;Jodhpur&quot;' value='26.238900000000001' />
                <semantic-value key='&quot;Kollam&quot;' value='8.8932000000000002' />
                <semantic-value key='&quot;Kota&quot;' value='25.213799999999999' />
                <semantic-value key='&quot;Raipur&quot;' value='21.2514' />
                <semantic-value key='&quot;Srinagar&quot;' value='34.079999999999998' />
                <semantic-value key='&quot;Thiruvananthapuram&quot;' value='8.5241000000000007' />
                <semantic-value key='&quot;Thrissur&quot;' value='10.5276' />
                <semantic-value key='&quot;Tiruchirapalli&quot;' value='10.7905' />
                <semantic-value key='&quot;Vasai Virar&quot;' value='19.3919' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Aurangabad&quot;' value='75.343299999999999' />
                <semantic-value key='&quot;Durg-Bhilainagar&quot;' value='81.350899999999996' />
                <semantic-value key='&quot;Jodhpur&quot;' value='76.024299999999997' />
                <semantic-value key='&quot;Kollam&quot;' value='76.614099999999993' />
                <semantic-value key='&quot;Kota&quot;' value='75.864800000000002' />
                <semantic-value key='&quot;Raipur&quot;' value='81.629599999999996' />
                <semantic-value key='&quot;Srinagar&quot;' value='74.793000000000006' />
                <semantic-value key='&quot;Thiruvananthapuram&quot;' value='76.936599999999999' />
                <semantic-value key='&quot;Thrissur&quot;' value='76.214399999999998' />
                <semantic-value key='&quot;Tiruchirapalli&quot;' value='78.704700000000003' />
                <semantic-value key='&quot;Vasai Virar&quot;' value='72.839699999999993' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Crime Rate]' role='measure' type='quantitative' />
            <column caption='City Group' datatype='string' name='[South Cities]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[City]' new-bin='true'>
                <bin default-name='false' value='&quot;Central Cities&quot;'>
                  <value>&quot;Agra&quot;</value>
                  <value>&quot;Allahabad&quot;</value>
                  <value>&quot;Aurangabad&quot;</value>
                  <value>&quot;Bhopal&quot;</value>
                  <value>&quot;Durg-Bhilainagar&quot;</value>
                  <value>&quot;Gwalior&quot;</value>
                  <value>&quot;Jabalpur&quot;</value>
                  <value>&quot;Varanasi&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Eastern Cities&quot;'>
                  <value>&quot;Asansol&quot;</value>
                  <value>&quot;Dhanbad&quot;</value>
                  <value>&quot;Jamshedpur&quot;</value>
                  <value>&quot;Raipur&quot;</value>
                  <value>&quot;Ranchi&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North Cities&quot;'>
                  <value>&quot;Amritsar&quot;</value>
                  <value>&quot;Chandigarh City&quot;</value>
                  <value>&quot;Faridabad&quot;</value>
                  <value>&quot;Ludhiana&quot;</value>
                  <value>&quot;Meerut&quot;</value>
                  <value>&quot;Srinagar&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South Cities&quot;'>
                  <value>&quot;Kannur&quot;</value>
                  <value>&quot;Kollam&quot;</value>
                  <value>&quot;Madurai&quot;</value>
                  <value>&quot;Malappuram&quot;</value>
                  <value>&quot;Thiruvananthapuram&quot;</value>
                  <value>&quot;Thrissur&quot;</value>
                  <value>&quot;Tiruchirapalli&quot;</value>
                  <value>&quot;Vijayawada&quot;</value>
                  <value>&quot;Vishakhapatnam&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Western Cities&quot;'>
                  <value>&quot;Jodhpur&quot;</value>
                  <value>&quot;Kota&quot;</value>
                  <value>&quot;Nasik&quot;</value>
                  <value>&quot;Rajkot&quot;</value>
                  <value>&quot;Vadodara&quot;</value>
                  <value>&quot;Vasai Virar&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Total]' role='measure' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Crime Rate]' derivation='Sum' name='[sum:Crime Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total]' derivation='Sum' name='[sum:Total:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[Action (City Group)]'>
            <groupfilter function='member' level='[South Cities]' member='&quot;South Cities&quot;' user:ui-action-filter='[Action6_AAB79BB8D2174796A55D1FBADFAFFAEC]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[Action (City1)]'>
            <groupfilter function='level-members' level='[City]' user:ui-action-filter='[Action3_00567BBF121F4DC28B88484110342D6B]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[South Cities]' filter-group='4'>
            <groupfilter function='level-members' level='[South Cities]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[none:City:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:City:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[none:City:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Crime Rate:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[none:City:nk]</column>
            <column>[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[South Cities]</column>
            <column>[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[Action (City1)]</column>
            <column>[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[Action (City Group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Total:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Total:qk]' num-steps='10' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Total:qk]' />
              <text column='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Total:qk]' />
              <tooltip column='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Total:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>City1:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[none:City:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'><![CDATA[Total Cases:<[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Total:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[none:City:nk]</rows>
        <cols>[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Total:qk]</cols>
      </table>
      <simple-id uuid='{247F2F17-A3BA-4966-9B99-8CE627A4E659}' />
    </worksheet>
    <worksheet name='Crime Rate by City (Region Map)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Tableau Medium' fontsize='18'>Crime Rate by City</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (2018 Cyber Crime Stats)' name='federated.1q5l0qt0dw3zzw1dvs4b41prvujn' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1q5l0qt0dw3zzw1dvs4b41prvujn'>
            <column caption='Top10' datatype='boolean' name='[Calculation_350154886162137088]' role='measure' type='nominal'>
              <calculation class='tableau' formula='INDEX()&lt;=10'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='City1' datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Chandigarh City&quot;' value='&quot;Chandigarh&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Aurangabad&quot;' value='19.876200000000001' />
                <semantic-value key='&quot;Durg-Bhilainagar&quot;' value='21.1938' />
                <semantic-value key='&quot;Jodhpur&quot;' value='26.238900000000001' />
                <semantic-value key='&quot;Kollam&quot;' value='8.8932000000000002' />
                <semantic-value key='&quot;Kota&quot;' value='25.213799999999999' />
                <semantic-value key='&quot;Raipur&quot;' value='21.2514' />
                <semantic-value key='&quot;Srinagar&quot;' value='34.079999999999998' />
                <semantic-value key='&quot;Thiruvananthapuram&quot;' value='8.5241000000000007' />
                <semantic-value key='&quot;Thrissur&quot;' value='10.5276' />
                <semantic-value key='&quot;Tiruchirapalli&quot;' value='10.7905' />
                <semantic-value key='&quot;Vasai Virar&quot;' value='19.3919' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Aurangabad&quot;' value='75.343299999999999' />
                <semantic-value key='&quot;Durg-Bhilainagar&quot;' value='81.350899999999996' />
                <semantic-value key='&quot;Jodhpur&quot;' value='76.024299999999997' />
                <semantic-value key='&quot;Kollam&quot;' value='76.614099999999993' />
                <semantic-value key='&quot;Kota&quot;' value='75.864800000000002' />
                <semantic-value key='&quot;Raipur&quot;' value='81.629599999999996' />
                <semantic-value key='&quot;Srinagar&quot;' value='74.793000000000006' />
                <semantic-value key='&quot;Thiruvananthapuram&quot;' value='76.936599999999999' />
                <semantic-value key='&quot;Thrissur&quot;' value='76.214399999999998' />
                <semantic-value key='&quot;Tiruchirapalli&quot;' value='78.704700000000003' />
                <semantic-value key='&quot;Vasai Virar&quot;' value='72.839699999999993' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Crime Rate]' role='measure' type='quantitative' />
            <column caption='City Group' datatype='string' name='[South Cities]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[City]' new-bin='true'>
                <bin default-name='false' value='&quot;Central Cities&quot;'>
                  <value>&quot;Agra&quot;</value>
                  <value>&quot;Allahabad&quot;</value>
                  <value>&quot;Aurangabad&quot;</value>
                  <value>&quot;Bhopal&quot;</value>
                  <value>&quot;Durg-Bhilainagar&quot;</value>
                  <value>&quot;Gwalior&quot;</value>
                  <value>&quot;Jabalpur&quot;</value>
                  <value>&quot;Varanasi&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Eastern Cities&quot;'>
                  <value>&quot;Asansol&quot;</value>
                  <value>&quot;Dhanbad&quot;</value>
                  <value>&quot;Jamshedpur&quot;</value>
                  <value>&quot;Raipur&quot;</value>
                  <value>&quot;Ranchi&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North Cities&quot;'>
                  <value>&quot;Amritsar&quot;</value>
                  <value>&quot;Chandigarh City&quot;</value>
                  <value>&quot;Faridabad&quot;</value>
                  <value>&quot;Ludhiana&quot;</value>
                  <value>&quot;Meerut&quot;</value>
                  <value>&quot;Srinagar&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South Cities&quot;'>
                  <value>&quot;Kannur&quot;</value>
                  <value>&quot;Kollam&quot;</value>
                  <value>&quot;Madurai&quot;</value>
                  <value>&quot;Malappuram&quot;</value>
                  <value>&quot;Thiruvananthapuram&quot;</value>
                  <value>&quot;Thrissur&quot;</value>
                  <value>&quot;Tiruchirapalli&quot;</value>
                  <value>&quot;Vijayawada&quot;</value>
                  <value>&quot;Vishakhapatnam&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Western Cities&quot;'>
                  <value>&quot;Jodhpur&quot;</value>
                  <value>&quot;Kota&quot;</value>
                  <value>&quot;Nasik&quot;</value>
                  <value>&quot;Rajkot&quot;</value>
                  <value>&quot;Vadodara&quot;</value>
                  <value>&quot;Vasai Virar&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Crime Rate]' derivation='Sum' name='[sum:Crime Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_350154886162137088]' derivation='User' name='[usr:Calculation_350154886162137088:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-field='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[none:City:nk]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[Action (City1)]'>
            <groupfilter function='level-members' level='[City]' user:ui-action-filter='[Action1_B18D9FD6DE5D49E699773E5419453906]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[South Cities]' filter-group='4'>
            <groupfilter function='level-members' level='[South Cities]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[none:City:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:City:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[none:City:nk]</column>
            <column>[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[South Cities]</column>
            <column>[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[Action (City1)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Crime Rate:qk]' scope='cols' value='false' />
            <encoding attr='space' class='0' field='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[Longitude (generated)]' field-type='quantitative' max='10842607.749657908' min='7589706.8624366615' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[Latitude (generated)]' field-type='quantitative' max='4234855.5134540489' min='753632.79353467829' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Crime Rate:qk]' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[none:City:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[none:City:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[none:City:nk]' value='false' />
            <format attr='omit-on-special' field='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[Latitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[Latitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[Latitude (generated)]' value='false' />
            <format attr='omit-on-special' field='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[Longitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[Longitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[Longitude (generated)]' value='false' />
            <format attr='background-color' value='#faf4e7' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Crime Rate:qk]' />
              <size column='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Crime Rate:qk]' />
              <lod column='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[none:City:nk]' />
              <lod column='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[usr:Calculation_350154886162137088:nk:1]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5932043790817261' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[Latitude (generated)]</rows>
        <cols>[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{A6B27780-3EA8-4119-B670-E375C5AF23AD}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Tableau Medium'>Crime Rate in India Analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f5f1f0' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Sheet1 (2018 Cyber Crime Stats)' name='federated.1q5l0qt0dw3zzw1dvs4b41prvujn' />
      </datasources>
      <datasource-dependencies datasource='federated.1q5l0qt0dw3zzw1dvs4b41prvujn'>
        <column caption='City1' datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
          <semantic-values semantic-role='[City].[Name]'>
            <semantic-value key='&quot;Chandigarh City&quot;' value='&quot;Chandigarh&quot;' />
          </semantic-values>
          <semantic-values semantic-role='[Geographical].[Latitude]'>
            <semantic-value key='&quot;Aurangabad&quot;' value='19.876200000000001' />
            <semantic-value key='&quot;Durg-Bhilainagar&quot;' value='21.1938' />
            <semantic-value key='&quot;Jodhpur&quot;' value='26.238900000000001' />
            <semantic-value key='&quot;Kollam&quot;' value='8.8932000000000002' />
            <semantic-value key='&quot;Kota&quot;' value='25.213799999999999' />
            <semantic-value key='&quot;Raipur&quot;' value='21.2514' />
            <semantic-value key='&quot;Srinagar&quot;' value='34.079999999999998' />
            <semantic-value key='&quot;Thiruvananthapuram&quot;' value='8.5241000000000007' />
            <semantic-value key='&quot;Thrissur&quot;' value='10.5276' />
            <semantic-value key='&quot;Tiruchirapalli&quot;' value='10.7905' />
            <semantic-value key='&quot;Vasai Virar&quot;' value='19.3919' />
          </semantic-values>
          <semantic-values semantic-role='[Geographical].[Longitude]'>
            <semantic-value key='&quot;Aurangabad&quot;' value='75.343299999999999' />
            <semantic-value key='&quot;Durg-Bhilainagar&quot;' value='81.350899999999996' />
            <semantic-value key='&quot;Jodhpur&quot;' value='76.024299999999997' />
            <semantic-value key='&quot;Kollam&quot;' value='76.614099999999993' />
            <semantic-value key='&quot;Kota&quot;' value='75.864800000000002' />
            <semantic-value key='&quot;Raipur&quot;' value='81.629599999999996' />
            <semantic-value key='&quot;Srinagar&quot;' value='74.793000000000006' />
            <semantic-value key='&quot;Thiruvananthapuram&quot;' value='76.936599999999999' />
            <semantic-value key='&quot;Thrissur&quot;' value='76.214399999999998' />
            <semantic-value key='&quot;Tiruchirapalli&quot;' value='78.704700000000003' />
            <semantic-value key='&quot;Vasai Virar&quot;' value='72.839699999999993' />
          </semantic-values>
        </column>
        <column caption='City Group' datatype='string' name='[South Cities]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
          <calculation class='categorical-bin' column='[City]' new-bin='true'>
            <bin default-name='false' value='&quot;Central Cities&quot;'>
              <value>&quot;Agra&quot;</value>
              <value>&quot;Allahabad&quot;</value>
              <value>&quot;Aurangabad&quot;</value>
              <value>&quot;Bhopal&quot;</value>
              <value>&quot;Durg-Bhilainagar&quot;</value>
              <value>&quot;Gwalior&quot;</value>
              <value>&quot;Jabalpur&quot;</value>
              <value>&quot;Varanasi&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Eastern Cities&quot;'>
              <value>&quot;Asansol&quot;</value>
              <value>&quot;Dhanbad&quot;</value>
              <value>&quot;Jamshedpur&quot;</value>
              <value>&quot;Raipur&quot;</value>
              <value>&quot;Ranchi&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;North Cities&quot;'>
              <value>&quot;Amritsar&quot;</value>
              <value>&quot;Chandigarh City&quot;</value>
              <value>&quot;Faridabad&quot;</value>
              <value>&quot;Ludhiana&quot;</value>
              <value>&quot;Meerut&quot;</value>
              <value>&quot;Srinagar&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;South Cities&quot;'>
              <value>&quot;Kannur&quot;</value>
              <value>&quot;Kollam&quot;</value>
              <value>&quot;Madurai&quot;</value>
              <value>&quot;Malappuram&quot;</value>
              <value>&quot;Thiruvananthapuram&quot;</value>
              <value>&quot;Thrissur&quot;</value>
              <value>&quot;Tiruchirapalli&quot;</value>
              <value>&quot;Vijayawada&quot;</value>
              <value>&quot;Vishakhapatnam&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Western Cities&quot;'>
              <value>&quot;Jodhpur&quot;</value>
              <value>&quot;Kota&quot;</value>
              <value>&quot;Nasik&quot;</value>
              <value>&quot;Rajkot&quot;</value>
              <value>&quot;Vadodara&quot;</value>
              <value>&quot;Vasai Virar&quot;</value>
            </bin>
          </calculation>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97298' id='29' param='vert' type-v2='layout-flow' w='98640' x='680' y='1351'>
            <zone h='6925' id='30' type-v2='title' w='98640' x='680' y='1351'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='90373' id='27' param='horz' type-v2='layout-flow' w='98640' x='680' y='8276'>
              <zone h='90373' id='24' param='horz' type-v2='layout-flow' w='98640' x='680' y='8276'>
                <zone h='90373' id='22' type-v2='layout-basic' w='98640' x='680' y='8276'>
                  <zone h='5983' id='17' mode='dropdown' name='Crime Rate by City (Region Map)' param='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[South Cities]' type-v2='filter' w='98640' x='680' y='8276'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='43343' id='14' name='Crime Rate by City (Region Map)' w='49308' x='680' y='14259'>
                    <layout-cache minheight='249' type-h='scalable' type-w='fixed' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='41047' id='20' name='Crime Rate by City' w='49308' x='680' y='57602'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='41051' id='21' name='City Wise Crime Cases Breakup (2)' w='49332' x='49988' y='57598'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='43339' id='25' name='Crime Rate Count' w='49332' x='49988' y='14259'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontname='Tableau Medium'>Crime Rate in India Analysis</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1300' minheight='1300' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='32' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97298' id='31' param='vert' type-v2='layout-flow' w='98640' x='680' y='1351'>
                <zone h='6925' id='30' type-v2='title' w='98640' x='680' y='1351'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5983' id='17' mode='dropdown' name='Crime Rate by City (Region Map)' param='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[South Cities]' type-v2='filter' w='98640' x='680' y='8276'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43343' id='14' is-fixed='true' name='Crime Rate by City (Region Map)' w='49308' x='680' y='14259'>
                  <layout-cache minheight='249' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43339' id='25' is-fixed='true' name='Crime Rate Count' w='49332' x='49988' y='14259'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41051' id='21' is-fixed='true' name='City Wise Crime Cases Breakup (2)' w='49332' x='49988' y='57598'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41047' id='20' is-fixed='true' name='Crime Rate by City' w='49308' x='680' y='57602'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{70481754-9B51-4C2A-852D-1B35FF3367DD}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Crime Rate by City'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Total:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[usr:Calculation_350154886162137088:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{837EA07C-A5DB-40E5-9ACF-B89D41E2F5CA}' />
    </window>
    <window class='worksheet' name='Crime Rate by City (Region Map)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[South Cities]' type='filter' />
            <card pane-specification-id='0' param='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Crime Rate:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Crime Rate:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[South Cities]</field>
            <field>[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Crime Rate:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6A11525A-7399-41A8-A995-D649E1DE98AF}' />
    </window>
    <window class='worksheet' name='Crime Rate Count'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[South Cities]' type='filter' />
            <card pane-specification-id='0' param='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Crime Rate:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[Parameters].[Parameter 2]</field>
            <field>[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[:Measure Names]</field>
            <field>[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[South Cities]</field>
            <field>[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[none:City:nk]</field>
            <field>[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Crime Rate:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{877BA3B1-B052-4136-A2DA-563452D62CCA}' />
    </window>
    <window class='worksheet' name='Crime Rate Count (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{EAC13A89-96BE-4489-8740-A57AE4C2187C}' />
    </window>
    <window class='worksheet' name='City Wise Crime Cases Breakup'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[:Measure Names]</field>
            <field>[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[none:City:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{644A0331-309B-4B88-B471-DFC80FB30870}' />
    </window>
    <window class='worksheet' name='City Wise Crime Cases Breakup (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[South Cities]' type='filter' />
            <card mode='dropdown' param='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[none:City:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[:Measure Names]</field>
            <field>[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[South Cities]</field>
            <field>[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[none:City:nk]</field>
            <field>[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[usr:Calculation_350154886162137088:nk:2]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1686C406-9107-4943-89D5-70EF53A6C941}' />
    </window>
    <window class='worksheet' name='City Wise Crime Cases Breakup (3)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[South Cities]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[:Measure Names]</field>
            <field>[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[South Cities]</field>
            <field>[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[none:City:nk]</field>
            <field>[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[usr:Calculation_350154886162137088:nk:2]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4B33B6FD-9DAC-406A-BE29-29F46E27B887}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='City Wise Crime Cases Breakup (2)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Crime Rate Count'>
          <zoom type='fit-height' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields />
                    <y-fields />
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[South Cities]</field>
                    <field>[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Crime Rate:qk]</field>
                    <field>[federated.1q5l0qt0dw3zzw1dvs4b41prvujn].[sum:Total:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;South Cities&quot;</value>
                  <value>42.599999999999994</value>
                  <value>695</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Crime Rate by City' />
        <viewpoint name='Crime Rate by City (Region Map)'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='20' />
      <simple-id uuid='{70E06CA7-CD93-40F5-80AB-D16DA4C6D6E8}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='City Wise Crime Cases Breakup' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='City Wise Crime Cases Breakup (2)' width='192'>
      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
      PzF7AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='City Wise Crime Cases Breakup (3)' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Crime Rate Count' width='192'>
      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
      d7ZtWAgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='124' name='Crime Rate Count (2)' width='164'>
      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
      /g8G14uIxSqrPQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Crime Rate by City' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Crime Rate by City (Region Map)' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
      WZZl3fu9r1hvv+1rlmVZllnJW//0ifdY115ztfW2v/+INZIatV53/eXWxZdcat34yrdYg8OD
      1jv/7DXW1Vdfbd3ygS9YuYpufel9b7H+5+71tfv1kvXuN73Muv1nD1uGaVrVatXKju623v76
      V1pXX32N9a7bvmqVdN365pc+aF179dXWy/74z6194yXrnh/+p/WSF15nvf5tf28dGC9Yj/7q
      e9bNN7zAuv6Gm6zfrNtlWZZlVUs56/U3XW697S/eal1/w83Wzx581vrJv3/C+ug//8Ay9Zx1
      y5+8ytowWOvToz//L+sVb77VypV1y9B1SzcM6wvv+3PrzoeesG555Y3WRRdfYj3vea+0fv2r
      71h/+q5PWKapW1/9h3dYP7j3KauNUwvFbNbKpyesYjZrHVYH2L7uHu7bVuFHP/sFy5R93HHf
      Vt77nr9ixVUv487v/xs9HRH+5K1/xa1/93Z2P/Rrdo7m6+43qlUOJFOsPm8l6qEwai0Q441v
      ewfv+Zu3sum3P2dvOs/99z7AtS/7E972ljfgqwzzn9/6GZ//rx9y3VKFO+55jHUPP0Dfqit4
      +9v/ihWLJo9PVVwab37Pp/jwX97Ed35wJ5dfcz0bHryHXZs3MBZYwqq+WoDewOAAy89bTdDj
      QnW5cKkq5VIB3Qjw7g++iyUrr+Lu33yf66+5gfLW37NxcJjHNx3kiotWzTHLaePEgXV4JbhY
      KBDq7CESDLJgfi/pTAa3y1WriOB2M/DsA3ztm3fi8gcJuFXMxgKqmkZfPMqzm7fXYmIMg51P
      3svXv/NLtGAYvwqmqXHbF/+JTtL8+z9+nvU7BshNTHD7P3+JXVkP8yI+3nDL+7n6vPnc/cNv
      8ON7Hp98gaoSjUTo6e6mWq7QfeYaVoay/Nu3fsTl192A5qo59hb0L2DHxmcp6iaWaWI6BH63
      ywUoaJobxRPnpdev4Vtf+zLBc65hfsexT2Vs43hBOTwBnH3hlTDwCLe8851857dbuPG6K+ia
      v4ihDffxvo98gbFcmfHhAf7v7l+TKk1VRhWXl7+85f/x46/dxjv++m/42/d+lolyibGh3dx9
      92/IVg0gxWdv+xzb9u5H0fx0z1vGpRctZXhklGwmTTZf4Ztf/yIPPbmJYtUiGnHUnzGqfPnj
      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
      YII=
    </thumbnail>
  </thumbnails>
</workbook>
